"""countries and regions in airports

Revision ID: 0dc7f09d55ea
Revises: 23918828e6d3
Create Date: 2025-08-09 22:52:57.535223

"""
from typing import Union

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0dc7f09d55ea"
down_revision: str | None = "23918828e6d3"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("airports", sa.Column("country_id", sa.Integer(), nullable=True))
    op.add_column("airports", sa.Column("region_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "airports", "regions", ["region_id"], ["id"])
    op.create_foreign_key(None, "airports", "countries", ["country_id"], ["id"])
    op.drop_column("airports", "iso_country")
    op.drop_column("airports", "iso_region")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("airports", sa.Column("iso_region", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column("airports", sa.Column("iso_country", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, "airports", type_="foreignkey")
    op.drop_constraint(None, "airports", type_="foreignkey")
    op.drop_column("airports", "region_id")
    op.drop_column("airports", "country_id")
    # ### end Alembic commands ###
