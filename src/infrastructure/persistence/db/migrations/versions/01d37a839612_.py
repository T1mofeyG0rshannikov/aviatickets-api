"""empty message

Revision ID: 01d37a839612
Revises:
Create Date: 2025-08-22 04:36:14.189195

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "01d37a839612"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "airlines",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("icao", sa.String(), nullable=True),
        sa.Column("iata", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("name_russian", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_airlines_iata"), "airlines", ["iata"], unique=False)
    op.create_index(op.f("ix_airlines_icao"), "airlines", ["icao"], unique=False)
    op.create_table(
        "cities",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("name_english", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "countries",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("iso", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("name_english", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_countries_iso"), "countries", ["iso"], unique=False)
    op.create_table(
        "tickets",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("price", sa.Float(), nullable=True),
        sa.Column("currency", sa.String(), nullable=True),
        sa.Column("transfers", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tickets_price"), "tickets", ["price"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("second_name", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("hash_password", sa.String(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "regions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("iso", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("name_english", sa.String(), nullable=True),
        sa.Column("country_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["countries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_regions_country_id"), "regions", ["country_id"], unique=False)
    op.create_index(op.f("ix_regions_iso"), "regions", ["iso"], unique=False)
    op.create_table(
        "usertickets",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("ticket_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ticket_id"],
            ["tickets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "airports",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("continent", sa.String(), nullable=True),
        sa.Column("country_id", sa.UUID(), nullable=True),
        sa.Column("region_id", sa.UUID(), nullable=True),
        sa.Column("city_id", sa.UUID(), nullable=True),
        sa.Column("scheduled_service", sa.String(), nullable=True),
        sa.Column("icao", sa.String(), nullable=True),
        sa.Column("iata", sa.String(), nullable=True),
        sa.Column("gps_code", sa.String(), nullable=True),
        sa.Column("local_code", sa.String(), nullable=True),
        sa.Column("name_russian", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["countries.id"],
        ),
        sa.ForeignKeyConstraint(
            ["region_id"],
            ["regions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_airports_city_id"), "airports", ["city_id"], unique=False)
    op.create_index(op.f("ix_airports_iata"), "airports", ["iata"], unique=False)
    op.create_index(op.f("ix_airports_icao"), "airports", ["icao"], unique=False)
    op.create_table(
        "passangers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_ticket_id", sa.UUID(), nullable=True),
        sa.Column("gender", sa.String(), nullable=True),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("second_name", sa.String(), nullable=True),
        sa.Column("birth_date", sa.Date(), nullable=True),
        sa.Column("passport", sa.String(), nullable=True),
        sa.Column("expiration_date", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_ticket_id"],
            ["usertickets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ticketsegments",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("origin_airport_id", sa.UUID(), nullable=True),
        sa.Column("destination_airport_id", sa.UUID(), nullable=True),
        sa.Column("airline_id", sa.UUID(), nullable=True),
        sa.Column("departure_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("return_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("flight_number", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("seat_class", sa.String(), nullable=True),
        sa.Column("ticket_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["airline_id"],
            ["airlines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["destination_airport_id"],
            ["airports.id"],
        ),
        sa.ForeignKeyConstraint(
            ["origin_airport_id"],
            ["airports.id"],
        ),
        sa.ForeignKeyConstraint(
            ["ticket_id"],
            ["tickets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ticketsegments_airline_id"), "ticketsegments", ["airline_id"], unique=False)
    op.create_index(
        op.f("ix_ticketsegments_destination_airport_id"), "ticketsegments", ["destination_airport_id"], unique=False
    )
    op.create_index(op.f("ix_ticketsegments_origin_airport_id"), "ticketsegments", ["origin_airport_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_ticketsegments_origin_airport_id"), table_name="ticketsegments")
    op.drop_index(op.f("ix_ticketsegments_destination_airport_id"), table_name="ticketsegments")
    op.drop_index(op.f("ix_ticketsegments_airline_id"), table_name="ticketsegments")
    op.drop_table("ticketsegments")
    op.drop_table("passangers")
    op.drop_index(op.f("ix_airports_icao"), table_name="airports")
    op.drop_index(op.f("ix_airports_iata"), table_name="airports")
    op.drop_index(op.f("ix_airports_city_id"), table_name="airports")
    op.drop_table("airports")
    op.drop_table("usertickets")
    op.drop_index(op.f("ix_regions_iso"), table_name="regions")
    op.drop_index(op.f("ix_regions_country_id"), table_name="regions")
    op.drop_table("regions")
    op.drop_table("user")
    op.drop_index(op.f("ix_tickets_price"), table_name="tickets")
    op.drop_table("tickets")
    op.drop_index(op.f("ix_countries_iso"), table_name="countries")
    op.drop_table("countries")
    op.drop_table("cities")
    op.drop_index(op.f("ix_airlines_icao"), table_name="airlines")
    op.drop_index(op.f("ix_airlines_iata"), table_name="airlines")
    op.drop_table("airlines")
    # ### end Alembic commands ###
